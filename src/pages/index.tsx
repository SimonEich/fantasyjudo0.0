import { SignIn, SignInButton, SignOutButton, UserButton, useUser } from "@clerk/clerk-react";
import Head from "next/head";
import Link from "next/link";
import { Input } from "postcss";
import { useState } from "react";
import { date } from "zod";
import { NoteCard } from "~/components/NoteCard";


import { RouterOutputs, api } from "~/utils/api";

const CreatePostWizard = () => {
  const {data} = api.test.getAll.useQuery();
  const {user} = useUser();
  console.log(data)
  

  
  const [input, setInput] = useState("");
  
const ctx = api.useContext();


const {mutate, isLoading : isPosting} = api.test.create.useMutation({
  onSuccess: () =>{
  setInput("")
  void ctx.test.getAll.invalidate()
}
}
);


if (!user) return null;



return (<div >
  
  
  <div className="flex justify-between items-center mx-auto max-w-screen-xl p-4 bg-slate-200">
  <div>
  {data?.map((test) => (<div key={test.test.id}>{test.test.content}</div>))}
    </div>
  <input
        placeholder="Content"
        className="grow bg-transparent outline-none"
        type="text"
        value= {input}
        onChange={(e) => setInput(e.target.value)}
        onKeyDown={(e) => {
          if (e.key === "Enter") {
            e.preventDefault();
            if (input !== "") {
              mutate({ content: input });
            }
          }
        }}
        disabled={isPosting}
        />
        
 <button onClick={() => mutate({content : input})} >Post</button>
</div>
</div> 
);

};

type PostWithUser = RouterOutputs["post"]["getAll"][number]


const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  console.log(author);
  return (
    <div key={post.id} className="border-b border-slate-400 p-8">
              {post.content}
              <span>  @{author?.username || author?.fullname}</span>
            </div>
  );

}
const Feed = () => {
  const {data, isLoading: postsLoading } = api.post.getAll.useQuery();

  if (postsLoading) return <div>loading</div>;
 

  if (!data) return <div>Something went wrong</div>


  return (
    <div className="flex grow flex-col overflow-y-scroll">
      {[...data].map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  )

}







export default function Home() {

  const user = useUser();

  const { data } = api.post.getAll.useQuery();
  const hello = api.test.hello.useQuery({ text: "from my tRPC and the world" });

console

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <div>
        <a href="#" className="text-sm  text-blue-600 dark:text-blue-500 hover:underline">
              {!user.isSignedIn&&<SignInButton />}
              {!!user.isSignedIn&&<UserButton/>}
              <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
              </a>
        </div>
        <div>
          {data?.map((post) => (<div key={post.post.id}>{post.post.content}</div>))}
        </div>
        <div className="flex justify-between items-center mx-auto max-w-screen-xl p-4 bg-slate-200">
        <CreatePostWizard />
        <Feed/>
      
        <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
        </p>
        </div>
        

      </main>
    </>
  );
}